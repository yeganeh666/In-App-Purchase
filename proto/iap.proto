syntax = "proto3";
package proto;
service Apple{
    rpc Verify (AppleReq) returns(AppleRes){};
}
message AppleReq{
    string ReceiptData=1;
}
message AppleRes{
    string Error=1;
}
service Google{
    rpc VerifySubscription (GoogleReq) returns(GoogleRes){};
}
message GoogleReq{
    string Package=1;
    string SubscriptionID=2;
    string PurchaseToken=3;
}
message GoogleRes{
    string Error=1;
    SubscriptionPurchase Result=2;
}
message SubscriptionPurchase {
    // AcknowledgementState: The acknowledgement state of the subscription
    // product. Possible values are: 0. Yet to be acknowledged 1.
    // Acknowledged
    int64 AcknowledgementState  =1;

    // AutoRenewing: Whether the subscription will automatically be renewed
    // when it reaches its current expiry time.
    bool AutoRenewing  =2;

    // AutoResumeTimeMillis: Time at which the subscription will be
    // automatically resumed, in milliseconds since the Epoch. Only present
    // if the user has requested to pause the subscription.
    int64 AutoResumeTimeMillis  =3;

    // CancelReason: The reason why a subscription was canceled or is not
    // auto-renewing. Possible values are: 0. User canceled the subscription
    // 1. Subscription was canceled by the system, for example because of a
    // billing problem 2. Subscription was replaced with a new subscription
    // 3. Subscription was canceled by the developer
    int64  CancelReason  =4;

    // CancelSurveyResult: Information provided by the user when they
    // complete the subscription cancellation flow (cancellation reason
    // survey).
    //CancelSurveyResult *SubscriptionCancelSurveyResult =5;

    // CountryCode: ISO 3166-1 alpha-2 billing country/region code of the
    // user at the time the subscription was granted.
    string  CountryCode  =5;

    // DeveloperPayload: A developer-specified string that contains
    // supplemental information about an order.
    string DeveloperPayload  =6;

    // EmailAddress: The email address of the user when the subscription was
    // purchased. Only present for purchases made with 'Subscribe with
    // Google'.
    string EmailAddress  =7;

    // ExpiryTimeMillis: Time at which the subscription will expire, in
    // milliseconds since the Epoch.
    int64 ExpiryTimeMillis  =8;

    // ExternalAccountId: User account identifier in the third-party
    // service. Only present if account linking happened as part of the
    // subscription purchase flow.
    string ExternalAccountId  =9;

    // FamilyName: The family name of the user when the subscription was
    // purchased. Only present for purchases made with 'Subscribe with
    // Google'.
    string FamilyName  =10;

    // GivenName: The given name of the user when the subscription was
    // purchased. Only present for purchases made with 'Subscribe with
    // Google'.
    string GivenName  =11;

    // IntroductoryPriceInfo: Introductory price information of the
    // subscription. This is only present when the subscription was
    // purchased with an introductory price. This field does not indicate
    // the subscription is currently in introductory price period.
    // IntroductoryPriceInfo *IntroductoryPriceInfo `json:"introductoryPriceInfo,omitempty"`

    // Kind: This kind represents a subscriptionPurchase object in the
    // androidpublisher service.
    string Kind  =12;

    // LinkedPurchaseToken: The purchase token of the originating purchase
    // if this subscription is one of the following: 0. Re-signup of a
    // canceled but non-lapsed subscription 1. Upgrade/downgrade from a
    // previous subscription For example, suppose a user originally signs up
    // and you receive purchase token X, then the user cancels and goes
    // through the resignup flow (before their subscription lapses) and you
    // receive purchase token Y, and finally the user upgrades their
    // subscription and you receive purchase token Z. If you call this API
    // with purchase token Z, this field will be set to Y. If you call this
    // API with purchase token Y, this field will be set to X. If you call
    // this API with purchase token X, this field will not be set.
    string LinkedPurchaseToken  =13;

    // ObfuscatedExternalAccountId: An obfuscated version of the id that is
    // uniquely associated with the user's account in your app. Present for
    // the following purchases: * If account linking happened as part of the
    // subscription purchase flow. * It was specified using
    // https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was
    // made.
    string ObfuscatedExternalAccountId  =14;

    // ObfuscatedExternalProfileId: An obfuscated version of the id that is
    // uniquely associated with the user's profile in your app. Only present
    // if specified using
    // https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was
    // made.
    string ObfuscatedExternalProfileId  =15;

    // OrderId: The order id of the latest recurring order associated with
    // the purchase of the subscription.
    string OrderId  =16;

    // PaymentState: The payment state of the subscription. Possible values
    // are: 0. Payment pending 1. Payment received 2. Free trial 3. Pending
    // deferred upgrade/downgrade
    int64 PaymentState =17;

    // PriceAmountMicros: Price of the subscription, not including tax.
    // Price is expressed in micro-units, where 1,000,000 micro-units
    // represents one unit of the currency. For example, if the subscription
    // price is â‚¬1.99, price_amount_micros is 1990000.
    int64 PriceAmountMicros  =18;

    // PriceChange: The latest price change information available. This is
    // present only when there is an upcoming price change for the
    // subscription yet to be applied. Once the subscription renews with the
    // new price or the subscription is canceled, no price change
    // information will be returned.
    // PriceChange *SubscriptionPriceChange `json:"priceChange,omitempty"`

    // PriceCurrencyCode: ISO 4217 currency code for the subscription price.
    // For example, if the price is specified in British pounds sterling,
    // price_currency_code is "GBP".
    string PriceCurrencyCode  =19;

    // ProfileId: The Google profile id of the user when the subscription
    // was purchased. Only present for purchases made with 'Subscribe with
    // Google'.
    string ProfileId  =20;

    // ProfileName: The profile name of the user when the subscription was
    // purchased. Only present for purchases made with 'Subscribe with
    // Google'.
    string ProfileName  =21;

    // PromotionCode: The promotion code applied on this purchase. This
    // field is only set if a vanity code promotion is applied when the
    // subscription was purchased.
    string PromotionCode  =22;

    // PromotionType: The type of promotion applied on this purchase. This
    // field is only set if a promotion is applied when the subscription was
    // purchased. Possible values are: 0. One time code 1. Vanity code
    int64 PromotionType  =23;

    // PurchaseType: The type of purchase of the subscription. This field is
    // only set if this purchase was not made using the standard in-app
    // billing flow. Possible values are: 0. Test (i.e. purchased from a
    // license testing account) 1. Promo (i.e. purchased using a promo code)
    // PurchaseType *int64 =24;

    // StartTimeMillis: Time at which the subscription was granted, in
    // milliseconds since the Epoch.
    int64 StartTimeMillis  =24;

    // UserCancellationTimeMillis: The time at which the subscription was
    // canceled by the user, in milliseconds since the epoch. Only present
    // if cancelReason is 0.
    int64 UserCancellationTimeMillis  =25;

}