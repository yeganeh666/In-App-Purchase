// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/iap.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AppleReq struct {
	ReceiptData          string   `protobuf:"bytes,1,opt,name=ReceiptData,proto3" json:"ReceiptData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppleReq) Reset()         { *m = AppleReq{} }
func (m *AppleReq) String() string { return proto.CompactTextString(m) }
func (*AppleReq) ProtoMessage()    {}
func (*AppleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_iap_9ded855af14a87e2, []int{0}
}
func (m *AppleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppleReq.Unmarshal(m, b)
}
func (m *AppleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppleReq.Marshal(b, m, deterministic)
}
func (dst *AppleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppleReq.Merge(dst, src)
}
func (m *AppleReq) XXX_Size() int {
	return xxx_messageInfo_AppleReq.Size(m)
}
func (m *AppleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AppleReq.DiscardUnknown(m)
}

var xxx_messageInfo_AppleReq proto.InternalMessageInfo

func (m *AppleReq) GetReceiptData() string {
	if m != nil {
		return m.ReceiptData
	}
	return ""
}

type AppleRes struct {
	Error                string   `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppleRes) Reset()         { *m = AppleRes{} }
func (m *AppleRes) String() string { return proto.CompactTextString(m) }
func (*AppleRes) ProtoMessage()    {}
func (*AppleRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_iap_9ded855af14a87e2, []int{1}
}
func (m *AppleRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppleRes.Unmarshal(m, b)
}
func (m *AppleRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppleRes.Marshal(b, m, deterministic)
}
func (dst *AppleRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppleRes.Merge(dst, src)
}
func (m *AppleRes) XXX_Size() int {
	return xxx_messageInfo_AppleRes.Size(m)
}
func (m *AppleRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AppleRes.DiscardUnknown(m)
}

var xxx_messageInfo_AppleRes proto.InternalMessageInfo

func (m *AppleRes) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type GoogleReq struct {
	Package              string   `protobuf:"bytes,1,opt,name=Package,proto3" json:"Package,omitempty"`
	SubscriptionID       string   `protobuf:"bytes,2,opt,name=SubscriptionID,proto3" json:"SubscriptionID,omitempty"`
	PurchaseToken        string   `protobuf:"bytes,3,opt,name=PurchaseToken,proto3" json:"PurchaseToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoogleReq) Reset()         { *m = GoogleReq{} }
func (m *GoogleReq) String() string { return proto.CompactTextString(m) }
func (*GoogleReq) ProtoMessage()    {}
func (*GoogleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_iap_9ded855af14a87e2, []int{2}
}
func (m *GoogleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleReq.Unmarshal(m, b)
}
func (m *GoogleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleReq.Marshal(b, m, deterministic)
}
func (dst *GoogleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleReq.Merge(dst, src)
}
func (m *GoogleReq) XXX_Size() int {
	return xxx_messageInfo_GoogleReq.Size(m)
}
func (m *GoogleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleReq.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleReq proto.InternalMessageInfo

func (m *GoogleReq) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *GoogleReq) GetSubscriptionID() string {
	if m != nil {
		return m.SubscriptionID
	}
	return ""
}

func (m *GoogleReq) GetPurchaseToken() string {
	if m != nil {
		return m.PurchaseToken
	}
	return ""
}

type GoogleRes struct {
	Error                string                `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	Result               *SubscriptionPurchase `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GoogleRes) Reset()         { *m = GoogleRes{} }
func (m *GoogleRes) String() string { return proto.CompactTextString(m) }
func (*GoogleRes) ProtoMessage()    {}
func (*GoogleRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_iap_9ded855af14a87e2, []int{3}
}
func (m *GoogleRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleRes.Unmarshal(m, b)
}
func (m *GoogleRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleRes.Marshal(b, m, deterministic)
}
func (dst *GoogleRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleRes.Merge(dst, src)
}
func (m *GoogleRes) XXX_Size() int {
	return xxx_messageInfo_GoogleRes.Size(m)
}
func (m *GoogleRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleRes.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleRes proto.InternalMessageInfo

func (m *GoogleRes) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GoogleRes) GetResult() *SubscriptionPurchase {
	if m != nil {
		return m.Result
	}
	return nil
}

type SubscriptionPurchase struct {
	// AcknowledgementState: The acknowledgement state of the subscription
	// product. Possible values are: 0. Yet to be acknowledged 1.
	// Acknowledged
	AcknowledgementState int64 `protobuf:"varint,1,opt,name=AcknowledgementState,proto3" json:"AcknowledgementState,omitempty"`
	// AutoRenewing: Whether the subscription will automatically be renewed
	// when it reaches its current expiry time.
	AutoRenewing bool `protobuf:"varint,2,opt,name=AutoRenewing,proto3" json:"AutoRenewing,omitempty"`
	// AutoResumeTimeMillis: Time at which the subscription will be
	// automatically resumed, in milliseconds since the Epoch. Only present
	// if the user has requested to pause the subscription.
	AutoResumeTimeMillis int64 `protobuf:"varint,3,opt,name=AutoResumeTimeMillis,proto3" json:"AutoResumeTimeMillis,omitempty"`
	// CancelReason: The reason why a subscription was canceled or is not
	// auto-renewing. Possible values are: 0. User canceled the subscription
	// 1. Subscription was canceled by the system, for example because of a
	// billing problem 2. Subscription was replaced with a new subscription
	// 3. Subscription was canceled by the developer
	CancelReason int64 `protobuf:"varint,4,opt,name=CancelReason,proto3" json:"CancelReason,omitempty"`
	// CountryCode: ISO 3166-1 alpha-2 billing country/region code of the
	// user at the time the subscription was granted.
	CountryCode string `protobuf:"bytes,5,opt,name=CountryCode,proto3" json:"CountryCode,omitempty"`
	// DeveloperPayload: A developer-specified string that contains
	// supplemental information about an order.
	DeveloperPayload string `protobuf:"bytes,6,opt,name=DeveloperPayload,proto3" json:"DeveloperPayload,omitempty"`
	// EmailAddress: The email address of the user when the subscription was
	// purchased. Only present for purchases made with 'Subscribe with
	// Google'.
	EmailAddress string `protobuf:"bytes,7,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	// ExpiryTimeMillis: Time at which the subscription will expire, in
	// milliseconds since the Epoch.
	ExpiryTimeMillis int64 `protobuf:"varint,8,opt,name=ExpiryTimeMillis,proto3" json:"ExpiryTimeMillis,omitempty"`
	// ExternalAccountId: User account identifier in the third-party
	// service. Only present if account linking happened as part of the
	// subscription purchase flow.
	ExternalAccountId string `protobuf:"bytes,9,opt,name=ExternalAccountId,proto3" json:"ExternalAccountId,omitempty"`
	// FamilyName: The family name of the user when the subscription was
	// purchased. Only present for purchases made with 'Subscribe with
	// Google'.
	FamilyName string `protobuf:"bytes,10,opt,name=FamilyName,proto3" json:"FamilyName,omitempty"`
	// GivenName: The given name of the user when the subscription was
	// purchased. Only present for purchases made with 'Subscribe with
	// Google'.
	GivenName string `protobuf:"bytes,11,opt,name=GivenName,proto3" json:"GivenName,omitempty"`
	// Kind: This kind represents a subscriptionPurchase object in the
	// androidpublisher service.
	Kind string `protobuf:"bytes,12,opt,name=Kind,proto3" json:"Kind,omitempty"`
	// LinkedPurchaseToken: The purchase token of the originating purchase
	// if this subscription is one of the following: 0. Re-signup of a
	// canceled but non-lapsed subscription 1. Upgrade/downgrade from a
	// previous subscription For example, suppose a user originally signs up
	// and you receive purchase token X, then the user cancels and goes
	// through the resignup flow (before their subscription lapses) and you
	// receive purchase token Y, and finally the user upgrades their
	// subscription and you receive purchase token Z. If you call this API
	// with purchase token Z, this field will be set to Y. If you call this
	// API with purchase token Y, this field will be set to X. If you call
	// this API with purchase token X, this field will not be set.
	LinkedPurchaseToken string `protobuf:"bytes,13,opt,name=LinkedPurchaseToken,proto3" json:"LinkedPurchaseToken,omitempty"`
	// ObfuscatedExternalAccountId: An obfuscated version of the id that is
	// uniquely associated with the user's account in your app. Present for
	// the following purchases: * If account linking happened as part of the
	// subscription purchase flow. * It was specified using
	// https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was
	// made.
	ObfuscatedExternalAccountId string `protobuf:"bytes,14,opt,name=ObfuscatedExternalAccountId,proto3" json:"ObfuscatedExternalAccountId,omitempty"`
	// ObfuscatedExternalProfileId: An obfuscated version of the id that is
	// uniquely associated with the user's profile in your app. Only present
	// if specified using
	// https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was
	// made.
	ObfuscatedExternalProfileId string `protobuf:"bytes,15,opt,name=ObfuscatedExternalProfileId,proto3" json:"ObfuscatedExternalProfileId,omitempty"`
	// OrderId: The order id of the latest recurring order associated with
	// the purchase of the subscription.
	OrderId string `protobuf:"bytes,16,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	// PaymentState: The payment state of the subscription. Possible values
	// are: 0. Payment pending 1. Payment received 2. Free trial 3. Pending
	// deferred upgrade/downgrade
	PaymentState int64 `protobuf:"varint,17,opt,name=PaymentState,proto3" json:"PaymentState,omitempty"`
	// PriceAmountMicros: Price of the subscription, not including tax.
	// Price is expressed in micro-units, where 1,000,000 micro-units
	// represents one unit of the currency. For example, if the subscription
	// price is €1.99, price_amount_micros is 1990000.
	PriceAmountMicros int64 `protobuf:"varint,18,opt,name=PriceAmountMicros,proto3" json:"PriceAmountMicros,omitempty"`
	// PriceCurrencyCode: ISO 4217 currency code for the subscription price.
	// For example, if the price is specified in British pounds sterling,
	// price_currency_code is "GBP".
	PriceCurrencyCode string `protobuf:"bytes,19,opt,name=PriceCurrencyCode,proto3" json:"PriceCurrencyCode,omitempty"`
	// ProfileId: The Google profile id of the user when the subscription
	// was purchased. Only present for purchases made with 'Subscribe with
	// Google'.
	ProfileId string `protobuf:"bytes,20,opt,name=ProfileId,proto3" json:"ProfileId,omitempty"`
	// ProfileName: The profile name of the user when the subscription was
	// purchased. Only present for purchases made with 'Subscribe with
	// Google'.
	ProfileName string `protobuf:"bytes,21,opt,name=ProfileName,proto3" json:"ProfileName,omitempty"`
	// PromotionCode: The promotion code applied on this purchase. This
	// field is only set if a vanity code promotion is applied when the
	// subscription was purchased.
	PromotionCode string `protobuf:"bytes,22,opt,name=PromotionCode,proto3" json:"PromotionCode,omitempty"`
	// PromotionType: The type of promotion applied on this purchase. This
	// field is only set if a promotion is applied when the subscription was
	// purchased. Possible values are: 0. One time code 1. Vanity code
	PromotionType int64 `protobuf:"varint,23,opt,name=PromotionType,proto3" json:"PromotionType,omitempty"`
	// StartTimeMillis: Time at which the subscription was granted, in
	// milliseconds since the Epoch.
	StartTimeMillis int64 `protobuf:"varint,24,opt,name=StartTimeMillis,proto3" json:"StartTimeMillis,omitempty"`
	// UserCancellationTimeMillis: The time at which the subscription was
	// canceled by the user, in milliseconds since the epoch. Only present
	// if cancelReason is 0.
	UserCancellationTimeMillis int64    `protobuf:"varint,25,opt,name=UserCancellationTimeMillis,proto3" json:"UserCancellationTimeMillis,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *SubscriptionPurchase) Reset()         { *m = SubscriptionPurchase{} }
func (m *SubscriptionPurchase) String() string { return proto.CompactTextString(m) }
func (*SubscriptionPurchase) ProtoMessage()    {}
func (*SubscriptionPurchase) Descriptor() ([]byte, []int) {
	return fileDescriptor_iap_9ded855af14a87e2, []int{4}
}
func (m *SubscriptionPurchase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionPurchase.Unmarshal(m, b)
}
func (m *SubscriptionPurchase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionPurchase.Marshal(b, m, deterministic)
}
func (dst *SubscriptionPurchase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionPurchase.Merge(dst, src)
}
func (m *SubscriptionPurchase) XXX_Size() int {
	return xxx_messageInfo_SubscriptionPurchase.Size(m)
}
func (m *SubscriptionPurchase) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionPurchase.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionPurchase proto.InternalMessageInfo

func (m *SubscriptionPurchase) GetAcknowledgementState() int64 {
	if m != nil {
		return m.AcknowledgementState
	}
	return 0
}

func (m *SubscriptionPurchase) GetAutoRenewing() bool {
	if m != nil {
		return m.AutoRenewing
	}
	return false
}

func (m *SubscriptionPurchase) GetAutoResumeTimeMillis() int64 {
	if m != nil {
		return m.AutoResumeTimeMillis
	}
	return 0
}

func (m *SubscriptionPurchase) GetCancelReason() int64 {
	if m != nil {
		return m.CancelReason
	}
	return 0
}

func (m *SubscriptionPurchase) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *SubscriptionPurchase) GetDeveloperPayload() string {
	if m != nil {
		return m.DeveloperPayload
	}
	return ""
}

func (m *SubscriptionPurchase) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *SubscriptionPurchase) GetExpiryTimeMillis() int64 {
	if m != nil {
		return m.ExpiryTimeMillis
	}
	return 0
}

func (m *SubscriptionPurchase) GetExternalAccountId() string {
	if m != nil {
		return m.ExternalAccountId
	}
	return ""
}

func (m *SubscriptionPurchase) GetFamilyName() string {
	if m != nil {
		return m.FamilyName
	}
	return ""
}

func (m *SubscriptionPurchase) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *SubscriptionPurchase) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *SubscriptionPurchase) GetLinkedPurchaseToken() string {
	if m != nil {
		return m.LinkedPurchaseToken
	}
	return ""
}

func (m *SubscriptionPurchase) GetObfuscatedExternalAccountId() string {
	if m != nil {
		return m.ObfuscatedExternalAccountId
	}
	return ""
}

func (m *SubscriptionPurchase) GetObfuscatedExternalProfileId() string {
	if m != nil {
		return m.ObfuscatedExternalProfileId
	}
	return ""
}

func (m *SubscriptionPurchase) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *SubscriptionPurchase) GetPaymentState() int64 {
	if m != nil {
		return m.PaymentState
	}
	return 0
}

func (m *SubscriptionPurchase) GetPriceAmountMicros() int64 {
	if m != nil {
		return m.PriceAmountMicros
	}
	return 0
}

func (m *SubscriptionPurchase) GetPriceCurrencyCode() string {
	if m != nil {
		return m.PriceCurrencyCode
	}
	return ""
}

func (m *SubscriptionPurchase) GetProfileId() string {
	if m != nil {
		return m.ProfileId
	}
	return ""
}

func (m *SubscriptionPurchase) GetProfileName() string {
	if m != nil {
		return m.ProfileName
	}
	return ""
}

func (m *SubscriptionPurchase) GetPromotionCode() string {
	if m != nil {
		return m.PromotionCode
	}
	return ""
}

func (m *SubscriptionPurchase) GetPromotionType() int64 {
	if m != nil {
		return m.PromotionType
	}
	return 0
}

func (m *SubscriptionPurchase) GetStartTimeMillis() int64 {
	if m != nil {
		return m.StartTimeMillis
	}
	return 0
}

func (m *SubscriptionPurchase) GetUserCancellationTimeMillis() int64 {
	if m != nil {
		return m.UserCancellationTimeMillis
	}
	return 0
}

func init() {
	proto.RegisterType((*AppleReq)(nil), "proto.AppleReq")
	proto.RegisterType((*AppleRes)(nil), "proto.AppleRes")
	proto.RegisterType((*GoogleReq)(nil), "proto.GoogleReq")
	proto.RegisterType((*GoogleRes)(nil), "proto.GoogleRes")
	proto.RegisterType((*SubscriptionPurchase)(nil), "proto.SubscriptionPurchase")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppleClient is the client API for Apple service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppleClient interface {
	Verify(ctx context.Context, in *AppleReq, opts ...grpc.CallOption) (*AppleRes, error)
}

type appleClient struct {
	cc *grpc.ClientConn
}

func NewAppleClient(cc *grpc.ClientConn) AppleClient {
	return &appleClient{cc}
}

func (c *appleClient) Verify(ctx context.Context, in *AppleReq, opts ...grpc.CallOption) (*AppleRes, error) {
	out := new(AppleRes)
	err := c.cc.Invoke(ctx, "/proto.Apple/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppleServer is the server API for Apple service.
type AppleServer interface {
	Verify(context.Context, *AppleReq) (*AppleRes, error)
}

func RegisterAppleServer(s *grpc.Server, srv AppleServer) {
	s.RegisterService(&_Apple_serviceDesc, srv)
}

func _Apple_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppleServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Apple/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppleServer).Verify(ctx, req.(*AppleReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Apple_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Apple",
	HandlerType: (*AppleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Verify",
			Handler:    _Apple_Verify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/iap.proto",
}

// GoogleClient is the client API for Google service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoogleClient interface {
	VerifySubscription(ctx context.Context, in *GoogleReq, opts ...grpc.CallOption) (*GoogleRes, error)
}

type googleClient struct {
	cc *grpc.ClientConn
}

func NewGoogleClient(cc *grpc.ClientConn) GoogleClient {
	return &googleClient{cc}
}

func (c *googleClient) VerifySubscription(ctx context.Context, in *GoogleReq, opts ...grpc.CallOption) (*GoogleRes, error) {
	out := new(GoogleRes)
	err := c.cc.Invoke(ctx, "/proto.Google/VerifySubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoogleServer is the server API for Google service.
type GoogleServer interface {
	VerifySubscription(context.Context, *GoogleReq) (*GoogleRes, error)
}

func RegisterGoogleServer(s *grpc.Server, srv GoogleServer) {
	s.RegisterService(&_Google_serviceDesc, srv)
}

func _Google_VerifySubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoogleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleServer).VerifySubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Google/VerifySubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleServer).VerifySubscription(ctx, req.(*GoogleReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Google_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Google",
	HandlerType: (*GoogleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VerifySubscription",
			Handler:    _Google_VerifySubscription_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/iap.proto",
}

func init() { proto.RegisterFile("proto/iap.proto", fileDescriptor_iap_9ded855af14a87e2) }

var fileDescriptor_iap_9ded855af14a87e2 = []byte{
	// 654 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xdf, 0x4f, 0xdb, 0x48,
	0x10, 0x86, 0x83, 0x84, 0x64, 0x02, 0x04, 0x96, 0xdc, 0xdd, 0x1e, 0x9c, 0xaa, 0xc8, 0xaa, 0x2a,
	0x54, 0x21, 0x5a, 0x05, 0xf5, 0xa5, 0x0f, 0x55, 0xa3, 0x24, 0x45, 0x51, 0x4b, 0x89, 0x0c, 0xe5,
	0x7d, 0xb1, 0x87, 0x74, 0x15, 0xdb, 0xeb, 0xee, 0xda, 0x40, 0xfe, 0xa5, 0xfe, 0x95, 0x95, 0x67,
	0x4d, 0x62, 0x27, 0x81, 0xa7, 0x64, 0xbe, 0xf9, 0xe6, 0x9b, 0x59, 0xcf, 0x0f, 0x68, 0xc6, 0x5a,
	0x25, 0xea, 0x9d, 0x14, 0xf1, 0x29, 0xfd, 0x63, 0x15, 0xfa, 0x71, 0x4e, 0xa0, 0xd6, 0x8d, 0xe3,
	0x00, 0x5d, 0xfc, 0xc5, 0xda, 0xd0, 0x70, 0xd1, 0x43, 0x19, 0x27, 0x7d, 0x91, 0x08, 0xbe, 0xde,
	0x5e, 0x3f, 0xae, 0xbb, 0x45, 0xc8, 0x69, 0xcf, 0xd8, 0x86, 0xb5, 0xa0, 0x32, 0xd0, 0x5a, 0xe9,
	0x9c, 0x67, 0x0d, 0xc7, 0x40, 0xfd, 0x5c, 0xa9, 0xb1, 0x15, 0xe4, 0xb0, 0x35, 0x12, 0xde, 0x44,
	0x8c, 0x31, 0x27, 0x3d, 0x99, 0xec, 0x0d, 0xec, 0x5e, 0xa5, 0xb7, 0xc6, 0xd3, 0x32, 0x4e, 0xa4,
	0x8a, 0x86, 0x7d, 0xfe, 0x17, 0x11, 0x16, 0x50, 0xf6, 0x1a, 0x76, 0x46, 0xa9, 0xf6, 0x7e, 0x0a,
	0x83, 0xd7, 0x6a, 0x82, 0x11, 0xdf, 0x20, 0x5a, 0x19, 0x74, 0x6e, 0xe6, 0x49, 0x9f, 0xa9, 0x8b,
	0x9d, 0x41, 0xd5, 0x45, 0x93, 0x06, 0x09, 0x25, 0x6a, 0x74, 0x8e, 0xec, 0x67, 0x38, 0x2d, 0xe6,
	0x7b, 0x12, 0x75, 0x73, 0xaa, 0xf3, 0xbb, 0x06, 0xad, 0x55, 0x04, 0xd6, 0x81, 0x56, 0xd7, 0x9b,
	0x44, 0xea, 0x21, 0x40, 0x7f, 0x8c, 0x21, 0x46, 0xc9, 0x55, 0x22, 0x12, 0xfb, 0xca, 0x0d, 0x77,
	0xa5, 0x8f, 0x39, 0xb0, 0xdd, 0x4d, 0x13, 0xe5, 0x62, 0x84, 0x0f, 0x32, 0x1a, 0x53, 0x1d, 0x35,
	0xb7, 0x84, 0x91, 0x2e, 0xd9, 0x26, 0x0d, 0xf1, 0x5a, 0x86, 0x78, 0x21, 0x83, 0x40, 0x1a, 0x7a,
	0x75, 0xa6, 0xbb, 0xc2, 0x97, 0xe9, 0xf6, 0x44, 0xe4, 0x61, 0xe0, 0xa2, 0x30, 0x2a, 0xe2, 0x9b,
	0xc4, 0x2d, 0x61, 0x59, 0x67, 0x7b, 0x2a, 0x8d, 0x12, 0x3d, 0xed, 0x29, 0x1f, 0x79, 0xc5, 0x76,
	0xb6, 0x00, 0xb1, 0xb7, 0xb0, 0xd7, 0xc7, 0x7b, 0x0c, 0x54, 0x8c, 0x7a, 0x24, 0xa6, 0x81, 0x12,
	0x3e, 0xaf, 0x12, 0x6d, 0x09, 0xcf, 0x32, 0x0e, 0x42, 0x21, 0x83, 0xae, 0xef, 0x6b, 0x34, 0x86,
	0x6f, 0x11, 0xaf, 0x84, 0x65, 0x7a, 0x83, 0xc7, 0x58, 0xea, 0x69, 0xe1, 0x15, 0x35, 0xaa, 0x6c,
	0x09, 0x67, 0x27, 0xb0, 0x3f, 0x78, 0x4c, 0x50, 0x47, 0x22, 0xe8, 0x7a, 0x5e, 0x56, 0xd4, 0xd0,
	0xe7, 0x75, 0x12, 0x5d, 0x76, 0xb0, 0x57, 0x00, 0x5f, 0x44, 0x28, 0x83, 0xe9, 0x77, 0x11, 0x22,
	0x07, 0xa2, 0x15, 0x10, 0xf6, 0x3f, 0xd4, 0xcf, 0xe5, 0x3d, 0x46, 0xe4, 0x6e, 0x90, 0x7b, 0x0e,
	0x30, 0x06, 0x9b, 0x5f, 0x65, 0xe4, 0xf3, 0x6d, 0x72, 0xd0, 0x7f, 0xf6, 0x1e, 0x0e, 0xbe, 0xc9,
	0x68, 0x82, 0x7e, 0x79, 0xd4, 0x76, 0x88, 0xb2, 0xca, 0xc5, 0x3e, 0xc3, 0xd1, 0xe5, 0xed, 0x5d,
	0x6a, 0x3c, 0x91, 0xa0, 0xbf, 0x5c, 0xfb, 0x2e, 0x45, 0xbe, 0x44, 0x59, 0xad, 0x30, 0xd2, 0xea,
	0x4e, 0x06, 0x38, 0xf4, 0x79, 0xf3, 0x39, 0x85, 0x19, 0x25, 0x5b, 0xae, 0x4b, 0xed, 0xa3, 0x1e,
	0xfa, 0x7c, 0xcf, 0x2e, 0x57, 0x6e, 0x66, 0xfd, 0x19, 0x89, 0xe9, 0x7c, 0x2a, 0xf7, 0xed, 0x44,
	0x14, 0xb1, 0xec, 0x9b, 0x8f, 0xb4, 0xf4, 0xb0, 0x1b, 0x66, 0x05, 0x5d, 0x48, 0x4f, 0x2b, 0xc3,
	0x19, 0x11, 0x97, 0x1d, 0x33, 0x76, 0x2f, 0xd5, 0x1a, 0x23, 0xcf, 0x4e, 0xd1, 0x81, 0xed, 0xd0,
	0x92, 0x23, 0xeb, 0xc0, 0xfc, 0x25, 0x2d, 0xdb, 0x81, 0x79, 0xdd, 0x6d, 0x68, 0xe4, 0x06, 0x75,
	0xe8, 0x6f, 0x3b, 0x8b, 0x05, 0x88, 0x96, 0x5e, 0xab, 0x50, 0x65, 0x2b, 0x47, 0x99, 0xfe, 0xc9,
	0x97, 0xbe, 0x08, 0x96, 0x58, 0xd7, 0xd3, 0x18, 0xf9, 0xbf, 0x54, 0x7d, 0x19, 0x64, 0xc7, 0xd0,
	0xbc, 0x4a, 0x84, 0x4e, 0x0a, 0x63, 0xc8, 0x89, 0xb7, 0x08, 0xb3, 0x4f, 0x70, 0xf8, 0xc3, 0xa0,
	0xb6, 0x7b, 0x13, 0x08, 0x52, 0x98, 0x07, 0xfd, 0x47, 0x41, 0x2f, 0x30, 0x3a, 0x1f, 0xa0, 0x42,
	0xb7, 0x91, 0x9d, 0x40, 0xf5, 0x06, 0xb5, 0xbc, 0x9b, 0xb2, 0x66, 0x7e, 0x64, 0x9e, 0x2e, 0xec,
	0xe1, 0x02, 0x60, 0x9c, 0xb5, 0x4e, 0x1f, 0xaa, 0xf6, 0x76, 0xb1, 0x8f, 0xc0, 0x6c, 0x5c, 0xf1,
	0xe4, 0xb0, 0xbd, 0x3c, 0x64, 0x76, 0x55, 0x0f, 0x17, 0x11, 0xe3, 0xac, 0xdd, 0x56, 0x09, 0x3a,
	0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x67, 0x8f, 0xee, 0xe7, 0x05, 0x00, 0x00,
}
